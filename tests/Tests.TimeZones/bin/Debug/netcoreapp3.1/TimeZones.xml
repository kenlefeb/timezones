<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TimeZones</name>
    </assembly>
    <members>
        <member name="T:TimeZones.Coordinates">
            <summary>
            Represents a single geographical point.
            </summary>
        </member>
        <member name="P:TimeZones.Coordinates.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
            <autogeneratedoc />
        </member>
        <member name="P:TimeZones.Coordinates.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
            <autogeneratedoc />
        </member>
        <member name="M:TimeZones.Coordinates.Parse(System.String)">
            <summary>
            Parses the specified text to extract valid coordinates from any of the following formats:<br/>
            <list type="bullet">
            <item>Decimal: 41.5057367,-81.6945422</item>
            <item>Decimal &amp; Ordinal (Abbreviated): 41.5057367 N, 81.6945422 W</item>
            <item>Decimal &amp; Ordinal: 41.5057367 North, 81.6945422 West</item>
            <item>Degrees, Minutes: 41° 30' 20.6532",-81° 41' 40.3506"</item>
            <item>Degrees, Minutes: 41° 30' 20.6532",-81° 41' 40.3506"</item>
            <item>Degrees, Minutes &amp; Ordinal (Abbreviated): 41° 30' 20.6532" N, 81° 41' 40.3506" W</item>
            <item>Degrees, Minutes &amp; Ordinal: 41° 30' 20.6532" North, 81° 41' 40.3506" West</item>
            </list>
            </summary>
            <param name="text">A textual representation of geographical coordinates.</param>
            <returns>Coordinates.</returns>
        </member>
        <member name="M:TimeZones.Coordinates.op_Implicit(System.String)~TimeZones.Coordinates">
            <summary>
            Performs an implicit conversion to <see cref="T:TimeZones.Coordinates"/> from text in one of the following formats:<br/>
            <list type="bullet">
            <item>Decimal: 41.5057367,-81.6945422</item>
            <item>Decimal &amp; Ordinal (Abbreviated): 41.5057367 N, 81.6945422 W</item>
            <item>Decimal &amp; Ordinal: 41.5057367 North, 81.6945422 West</item>
            <item>Degrees, Minutes: 41° 30' 20.6532",-81° 41' 40.3506"</item>
            <item>Degrees, Minutes: 41° 30' 20.6532",-81° 41' 40.3506"</item>
            <item>Degrees, Minutes &amp; Ordinal (Abbreviated): 41° 30' 20.6532" N, 81° 41' 40.3506" W</item>
            <item>Degrees, Minutes &amp; Ordinal: 41° 30' 20.6532" North, 81° 41' 40.3506" West</item>
            </list>
            </summary>
            <param name="text">A textual representation of geographical coordinates.</param>
            <returns>Coordinates.</returns>
        </member>
        <member name="T:TimeZones.Finder">
            <summary>
            Class Finder.
            Implements the <see cref="T:TimeZones.IFindTimeZones" />
            </summary>
            <seealso cref="T:TimeZones.IFindTimeZones" />
            <autogeneratedoc />
        </member>
        <member name="M:TimeZones.Finder.FindTimeZone(TimeZones.Coordinates)">
            <summary>
            Finds the time zone.
            </summary>
            <param name="coordinates">The coordinates.</param>
            <returns>Zone.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <autogeneratedoc />
        </member>
        <member name="T:TimeZones.IFindTimeZones">
            <summary>
            Interface IFindTimeZones
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:TimeZones.IFindTimeZones.FindTimeZone(TimeZones.Coordinates)">
            <summary>
            Finds the time zone.
            </summary>
            <param name="coordinates">The coordinates.</param>
            <returns>Zone.</returns>
            <autogeneratedoc />
        </member>
        <member name="T:TimeZones.Zone">
            <summary>
            Class Zone.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="P:TimeZones.Zone.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
            <autogeneratedoc />
        </member>
        <member name="M:TimeZones.Zone.Parse(System.String)">
            <summary>
            Parses the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>Zone.</returns>
            <autogeneratedoc />
        </member>
        <member name="M:TimeZones.Zone.op_Implicit(System.String)~TimeZones.Zone">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:TimeZones.Zone"/>.
            </summary>
            <param name="name">The name.</param>
            <returns>The result of the conversion.</returns>
            <autogeneratedoc />
        </member>
    </members>
</doc>
